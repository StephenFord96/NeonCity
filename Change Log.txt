Known Bugs:

-interacting with stairs and doors is gummed up with the presence of enemies especially in the brief moments after they are dead
-doors can still break cooldown 
-touching an AI's body while winding up an attack kills the player
-when guards are killed they still can instantiate spotted effects 
-neck snapping and using stairs is bound to same key and leads to some whacky stuff
-player is invincible while hiding 
-neck snap and door interaction doubles
-need to make "on stairs" onstay2d collide instead of 2d enter
-wire node and danger value shouldnt instantiate ontop of one another
-wire splice cursor system needs rework
-wire splice fill bucket method needs optimization
-camera spotlights can clip through rooms of cameras above them
-when you press 1 to access a terminal it instantly disables the first listed security feature, need a delay
-really weird really rare bug where you can still neck snap completely dead...invisible guards (I think I fixed with isDead parameter
 inside stealth killing method but i couldnt replicate it WITHOUT parameter...leaving it in anyways)
-can kill guards with swords through doors
-hitboxes are janky with spotlights

Changelog:


2/25/2020

-AI can only see through open doors
-Fixed some hitboxes around building walls
-Made a stock background landscape asset
-Stair ways can be generated based on barrier locations
-Stair ways are recorded and called upon for further generation
-Player can travel up and down stairways
-AI can open and close doors
-Fixed bug where AI would get stuck running into themselves 
-Fixed bugs surrounded by AI attempting to swarm through doorways
-First coded variable of type "list" for living guards
-Implementeded raise alarm mechanic: AI can notify all living guards if player is sighted after a brief delay
-AI will chase player on map if alarm is raised
-Cleaned up code and added more comment notes

2/27/2020
-Optimized code redundancy in AI bump checks
-Fixed bug where player could not open doors
-cleaned up unused variables in level generator and renamed some and fixed some comment lines; cleanup
-altered barrier spawning algorithim
-properly generate and record barrier zone stairway system
-fixed bug with barrier zone stairway that would attempt to look above itself for other dead stairs when they are generated
  bottom to top and allowed for overlap
-fixed a bunch of quick bugs with barrier zone stairways

3/1/2020
-implemented room detection and orientation system that all characters on the map have and for AI to refrence when navigating the map
-AI knows what room it is in
-AI knows which rooms have a barrier
-AI know which rooms have staircases
-AI knows what room the player is in
-temporarilly patched rare bug involving generation by dissalowing barrier locations to occur back to back in concurrent floors of a building

3/2/2020
-AI pathfinding implemented
-AI can go up and down stairs
-Fixed some issues with old code causing moonwalking

3/3/2020
-Added splash screan
-guard alerted symbol no longer stays after guard death
-enabled player death

3/6/2020
-Briefcase mission objective spawns intelligently on level now can be in a corner or a high barrier floor in deadzone
-made some pixel art for the hideout
-Added second scene called the hideout
-You can leave the hideout to go get a generated mission
-You can leave a mission to go to the hideout

3/7/2020 
-Made some pixel art assets for animations
-player can now do a stealth kill on enemy AI

3/9/2020
-detected sneaky bug involving a broken array, used building width instead of height when trying to sort for objective location, broke on 
 buildings that were particularly longer than they were taller, fixed it, obviously as well.

3/11/2020
-Stealth kill animations are now directional
-stealth kill animations are cleaner, no dissapearing, spasms loops, breaks
-player can now run past enemy while enemy is on ground/falling
-animation synced with player and enemy in timing
-game objects come togethor to clean up animation

3/13/2020

-made asset art for filler items around office level
-level will now generate filler items around the floors
-fixed several bugs, filler items cannot spawn on themselves, on stairs, or on the objective

3/15/2020
-made animation for player hiding
-player can now hide behind furniture from enemy guards
-fixed bug that made furniture never spawn on the first floor
-fixed bug making hiding non directional


3/19/2020
-speed up and optimized level generation process
-gray locked door will generate to protect objective
-gray locked doors will generate around the entire level
-became more confident in using for and foreach loops
-fixed bug where player was completely undetectable while hiding
-level now generates with varrying sizes of rooms by allowing rooms with unlocked doors to not generate themselves OR the walls above them
  giving the illussion that it is a bigger room (all room cells sizes are unchanged)
-locked door positons cannot generate dupes or overlap on barriers (caused less locked doors to appear on a level than expected)
-suspected to have fixed a bug that crashed the game when sorting for locked door positions

3/24/2020
-made pixel art for a brass key and a control pannel
-added some comment lines
-made pixel art for lock picking minigame
-added lock picking minigame
-fixed some bugs

3/26/2020
-Stealth takedown animations cleaned up
-pathfinding now supports universal input rather than just players position
-fixed a bug allowing player to move while lockpicking
-made hiding spot slot slightly smaller to reduce load time through generation pickyness
-Improved sword play (enemies no longer always feignted, fixed bug where enemy would never attack blocking player, enemies attack more frequently)
-cleaned up combat AI code and added comment lines

3/30/2020
-Lockpicking improved: tumbler combination position is saved so if you leave halfway through the minigame
   and come back to the door the puzzle doesn't re-shuffle itself, unnaturally
-Made lots of asset art for computer terminals and cameras + UI
-Terminals are animated in game
-First Fledgling UI implemented with terminal interactions
-Terminals can have their panels opened via lock picking minigame

3/31/2020
-expanded terminal UI
-Terminals now instantiate a combination of turret(s) and camera(s)
-Terminals recognize their associated security element(s)

4/4/2020
-made asset art for wire splice minigame 
-wire splicing minigame can be accessed after picking the panel lock to a terminal
-coded most of wire splice minigame
   >can be accessed from terminal UI
   >generates hit nodes without stacking /duping and number clues no longer crash when generated
   >generates chip overlay (stupidly, will rework)
   >minigame can be exitted with escape
-became much more proficient with multi dimensional arrays
-built version 0.01 first standalone commercial copy with place holder logo/splashscreens


4/5/2020
-wire splicing minigame further implemented (almost done)
   >refrences proper terminal for win/lose method
   >detects when player hits a "mine"
   >player can click around and remove chips
   >made a shoddy fill bucket method to remove all 0's from "minefield"
   >screwdriver now follows cursor (dissabled default cursor sprite durring minigame)

4/5/2020
-wire splicing minigame was optimized
-uses a list with a proper que and control for fill bucket method
-wire splicing minigame detects when player has won

5/5/2020
-wire splice minigame now informs terminal when player has spliced
-majorly optimized how terminals identify their security devices
-security devices now spawn around the level instead of ontop of terminals (who are self aware of what room they are in and can refrence level architecture)
-optimized level generation allowing for more furniture to spawn faster all in a reasonable time
-terminals now freely spawn in the game
-security features now generate around level intelligently and cannot occupy the same room as another based off of nexus grid
-cameras are animated but do not function properly

5/14/2020
-wiresplice minigame polished...
-fixed bug where danger value was incorrectly calculated due to sloppy boundary parameters
-optimized fill speed
-Diagonal filling implemented
-zeroize que is constant instead of in segments

5/24/2020
-Animated turrets and cameras
-Camera/turret spotlight has sprite masks
-Made a place holder song

5/27/2020
-turrets and cameras can be disabled from terminals
-spiffied up camera and turret animations

5/31/2020
-security cameras can detect player and will raise the building alarm when appropriate
-fixed a very SNEAKY (hah!) bug that occured when the player was hiding behind furniture and 2 guards would collide infront of the player
  neither of them should see the player but the one that was going towards the player and turned away from him spots the player. This was 
  because the left/right variable was being updated faster than the ray could adjust to firing left/right (giving a false positive)...
  so I added a delay parameter 

6/13/2020
-pixel art for turret muzzle flash and bullet
-basic animation and logic for turrets
-pixel art for laser trap
-laser turrets now shoot at you and can kill you
-laser turrets can kill enemies
-hit boxes established for projectiles
-friendly hacked turret won't shoot player
-turrets have a small cone of innacuracy
-built version 0.02

6/19/2020
-added bare bones system for point buy system with player camera focusOn method and disabling terminal UI animations beyond #3

7/31/20
-point by system worked on
-camera swaps to captured camera with crosshair overlay
-Level Gen now has a compiled list of all security items
-terminals are fed back compiled list
-any terminal can capture any camera now

8/5/2020
-point by system fully implemented
-parsing glitch effect
-overlay instructions/flavor text